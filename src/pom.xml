<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.macys</groupId>
		<artifactId>MacysParent</artifactId>
		<version>5.0.0-SNAPSHOT</version>
	</parent>

	<groupId>com.macys.common.pricing</groupId>
	<artifactId>price-change-calculator-service</artifactId>
	<version>0.0.1</version>
	<name>price-change-calculator-service</name>
	<description>Microservice to calculate pricing change in Cassandra database or graph</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<spring-cloud-contract.version>2.1.1.RELEASE</spring-cloud-contract.version>
		<spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<java.version>1.8</java.version>
		<asciidoctorj.version>1.5.6</asciidoctorj.version>
		<asciidoctor.maven.plugin.version>1.5.6</asciidoctor.maven.plugin.version>
		<asciidoctorj.pdf.version>1.5.0-alpha.16</asciidoctorj.pdf.version>
		<jruby.version>1.7.26</jruby.version>
		<zerocode-rest-bdd.version>1.3.1</zerocode-rest-bdd.version>
		<snippetsDirectory>${project.build.directory}/snippets</snippetsDirectory>
		<maven.jacoco.plugin.version>0.8.3</maven.jacoco.plugin.version>
		<appconfig.client.version>2.0.0</appconfig.client.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-cassandra-reactive</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>com.microsoft.spring.data.gremlin</groupId>
			<artifactId>spring-data-gremlin</artifactId>
			<version>2.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
<!-- 		<dependency>
			<groupId>com.datastax.dse</groupId>
			<artifactId>dse-java-driver-graph</artifactId>
			<version>1.8.1</version>
		</dependency> -->
		<dependency>
			<groupId>net.sf.dozer</groupId>
			<artifactId>dozer</artifactId>
			<version>5.5.1</version>
		</dependency>
		<dependency>
			<groupId>com.codahale.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>3.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.cassandraunit</groupId>
			<artifactId>cassandra-unit-spring</artifactId>
			<version>3.5.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.macys.platform</groupId>
			<artifactId>appconfig-client-spring-boot-starter</artifactId>
			<version>${appconfig.client.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<!-- <version>${micrometer.version}</version> -->
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.8.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.8.0</version>
		</dependency>

		<dependency>
			<groupId>com.toomuchcoding.jsonassert</groupId>
			<artifactId>jsonassert</artifactId>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>spring-web-test-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-verifier</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jsmart</groupId>
			<artifactId>zerocode-tdd</artifactId>
			<version>${zerocode-rest-bdd.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-contract-wiremock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java8</artifactId>
			<version>1.2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>1.2.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>1.2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.googlecode.junit-toolbox</groupId>
			<artifactId>junit-toolbox</artifactId>
			<version>2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>3.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock-standalone</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>

		<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-gcp-starter-logging</artifactId> 
			</dependency> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-gcp-starter-trace</artifactId> 
			</dependency> -->
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>2.1.4.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<distributionManagement>
		<snapshotRepository>
			<id>snapshots</id>
			<name>springcloudcontract-snapshots</name>
			<url>https://springcloudcontract.jfrog.io/springcloudcontract/libs-snapshot-local</url>
		</snapshotRepository>
	</distributionManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>2.1.4.RELEASE</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>naturalprogrammer</id>
			<url>https://naturalprogrammer.github.io/mvn-repository</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<failIfNoTests>true</failIfNoTests>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.8.0</version>
						<executions>
							<execution>
								<id>compile</id>
								<phase>compile</phase>
								<goals>
									<goal>compile</goal>
								</goals>
							</execution>
							<execution>
								<id>testCompile</id>
								<phase>test-compile</phase>
								<goals>
									<goal>testCompile</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.cloud</groupId>
						<artifactId>spring-cloud-contract-maven-plugin</artifactId>
						<version>${spring-cloud-contract.version}</version>
						<extensions>true</extensions>
						<configuration>
							<baseClassForTests>BaseClass</baseClassForTests>
							<basePackageForTests>com.macys.common.pricing.services</basePackageForTests>
							<packageWithBaseClasses>com.macys.common.pricing.services.pricechangecalculator
							</packageWithBaseClasses>
							<testMode>EXPLICIT</testMode>

						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${maven.jacoco.plugin.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>default-report</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor.maven.plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-pdf</artifactId>
								<version>${asciidoctorj.pdf.version}</version>
							</dependency>
							<!-- Comment this section to use the default jruby artifact provided 
								by the plugin -->
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby-complete</artifactId>
								<version>${jruby.version}</version>
							</dependency>
							<!-- Comment this section to use the default AsciidoctorJ artifact 
								provided by the plugin -->
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj</artifactId>
								<version>${asciidoctorj.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<!-- Attributes common to all output formats -->
							<attributes>
								<endpoint-url>http://example.org</endpoint-url>
								<sourcedir>${project.build.sourceDirectory}</sourcedir>
								<project-version>${project.version}</project-version>
							</attributes>
						</configuration>
						<!-- Multiple execution blocks allow to configure different input documents, 
							output formats or other configuration options -->
						<executions>
							<execution>
								<id>asciidoc-usermanual-to-pdf</id>
								<phase>package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>src/docs/asciidoc</sourceDirectory>
									<outputDirectory>target/generated-docs</outputDirectory>
									<doctype>book</doctype>
									<backend>pdf</backend>
									<!-- Since 1.5.0-alpha.9, PDF back-end can also use 'rouge' which 
										provides more coverage for other languages like scala -->
									<sourceHighlighter>coderay</sourceHighlighter>
									<attributes>
										<imagesdir>.</imagesdir>
										<pagenums />
										<toc />
										<idprefix />
										<idseparator>-</idseparator>
										<snippets>${snippetsDirectory}</snippets>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>asciidoc-techdocs-to-html</id>
								<phase>package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>src/docs/asciidoc</sourceDirectory>
									<outputDirectory>target/generated-docs</outputDirectory>
									<doctype>book</doctype>
									<backend>html5</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
									<attributes>
										<imagesdir>.</imagesdir>
										<toc>left</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<!-- set the idprefix to blank -->
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<snippets>${snippetsDirectory}</snippets>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>